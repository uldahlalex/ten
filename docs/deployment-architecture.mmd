---
title: "Deployment Architecture - Full Stack React + .NET App"
---

flowchart TD
    %% Development Phase
    subgraph DEV ["üõ†Ô∏è Development Environment"]
        DEVCLIENT["`**React Dev Server**
        *npm run dev*
        *localhost:5173*`"]
        DEVSERVER["`**.NET Dev Server**
        *dotnet run*
        *localhost:5000*`"]
    end
    
    %% Source Code
    subgraph SOURCE ["üìÅ Source Code"]
        CLIENTSRC["`**Client Code**
        *Vite application*`"]
        SERVERSRC["`**Server Code**
        *.NET 9 API*`"]
    end
    
    %% Build Process
    subgraph BUILD ["üèóÔ∏è Multi-Stage Docker Build"]
        direction TB
        
        subgraph STAGE1 ["Stage 1: Client Build"]
            NODEBUILD["`**Node.js Alpine**
            *npm ci*
            *npm run build*`"]
            REACTBUILD["`**React Build Output**
            *Static Files*
            *HTML, CSS, JS*`"]
        end
        
        subgraph STAGE2 ["Stage 2: Server Build"]
            DOTNETBUILD["`**.NET SDK Alpine**
            *dotnet publish*
            *Single-file executable*`"]
            APIBUILD["`**API Executable**
            *Self-contained*
            *Linux-optimized*`"]
        end
        
        subgraph STAGE3 ["Stage 3: File Combination"]
            COPYFILES["`**Copy React Build**
            *dist/ ‚Üí wwwroot/*
            *Static files served by Kestrel*`"]
        end
        
        subgraph STAGE4 ["Stage 4: Runtime Image"]
            RUNTIME["`**Production Container**
            *Minimal dependencies*
            *Ready for deployment*`"]
        end
    end
    
    %% Production Deployment
    subgraph PRODUCTION ["‚òÅÔ∏è Production Deployment"]
        KESTREL["`**Web Server**
        *‚Ä¢ Can serve Static files (Vite + React app) + JSON data*
        *‚Ä¢ Contains secrets added using 'fly secrets import < secrets.txt'*
       `"]
        
        subgraph RESPONSES ["üì§ Server Responses"]
            APIJSON["`**API JSON Data**
            *Task lists, user data*
            *Business logic results*`"]
            STATICFILES["`**Static Files**
            *HTML, CSS, JS*
            *React application*`"]
            SPAHTML["`**SPA Fallback**
            *index.html*
            *For client-side routing*`"]
        end
    end
    
    %% Client & Database
    BROWSER["`**üåê Web Browser**
    *User makes requests*
    *Renders React UI*`"]
    
    DB["`**üóÑÔ∏è PostgreSQL Database**
    *Persistent storage*
    *User data & tasks*`"]
    
    %% Connections - Development
    CLIENTSRC --> DEVCLIENT
    SERVERSRC --> DEVSERVER
    DEVCLIENT -.->|"API calls"| DEVSERVER
    
    %% Connections - Build Process
    CLIENTSRC --> NODEBUILD
    SERVERSRC --> DOTNETBUILD
    NODEBUILD --> REACTBUILD
    DOTNETBUILD --> APIBUILD
    REACTBUILD --> COPYFILES
    APIBUILD --> COPYFILES
    COPYFILES --> RUNTIME
    
    %% Connections - Production
    RUNTIME --> KESTREL
    KESTREL --> RESPONSES
    
    %% Connections - Request/Response Flow
    BROWSER -->|"üîÑ HTTP Requests<br/>(JSON API / Static Files / SPA Fallback)"| KESTREL
    
    STATICFILES -->|"üì± React App"| BROWSER
    APIJSON -->|"üìä JSON Data"| BROWSER
    SPAHTML -->|"üè† SPA Shell"| BROWSER
    
    %% Database Connections
    KESTREL --> DB
    DEVSERVER --> DB
    
    %% Styling
    classDef dev fill:#e3f2fd,stroke:#1976d2,stroke-width:2px
    classDef source fill:#f3e5f5,stroke:#7b1fa2,stroke-width:2px
    classDef build fill:#fff3e0,stroke:#f57c00,stroke-width:2px
    classDef production fill:#e8f5e8,stroke:#388e3c,stroke-width:2px
    classDef responses fill:#f1f8e9,stroke:#558b2f,stroke-width:2px
    classDef client fill:#fce4ec,stroke:#c2185b,stroke-width:2px
    classDef database fill:#37474f,stroke:#263238,stroke-width:3px,color:#ffffff
    
    class DEVCLIENT,DEVSERVER dev
    class CLIENTSRC,SERVERSRC source
    class NODEBUILD,DOTNETBUILD,REACTBUILD,APIBUILD,COPYFILES,RUNTIME build
    class KESTREL production
    class APIJSON,STATICFILES,SPAHTML responses
    class BROWSER client
    class DB database
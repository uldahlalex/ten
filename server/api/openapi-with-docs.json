{
  "x-generator": "NSwag v14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "Alex' Amazing REST API for training (loosely based on the 'TickTick' Task manager app)",
    "version": "1.0.0"
  },
  "paths": {
    "/Register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "operationId": "Auth_Register",
        "requestBody": {
          "x-name": "dto",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthRequestDto"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JwtResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "operationId": "Auth_Login",
        "requestBody": {
          "x-name": "dto",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthRequestDto"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JwtResponse"
                }
              }
            }
          }
        }
      }
    },
    "/GetMyTasks": {
      "post": {
        "tags": [
          "TicktickTask"
        ],
        "operationId": "TicktickTask_GetMyTasks",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetTasksFilterAndOrderParameters"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TickticktaskDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/CreateTask": {
      "post": {
        "tags": [
          "TicktickTask"
        ],
        "operationId": "TicktickTask_CreateTask",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "dto",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTaskRequestDto"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TickticktaskDto"
                }
              }
            }
          }
        }
      }
    },
    "/UpdateTask": {
      "patch": {
        "tags": [
          "TicktickTask"
        ],
        "operationId": "TicktickTask_UpdateTask",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "dto",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTaskRequestDto"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TickticktaskDto"
                }
              }
            }
          }
        }
      }
    },
    "/DeleteTask": {
      "delete": {
        "tags": [
          "TicktickTask"
        ],
        "operationId": "TicktickTask_DeleteTask",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "x-position": 1
          },
          {
            "name": "taskId",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TickticktaskDto"
                }
              }
            }
          }
        }
      }
    },
    "/GetMyTags": {
      "get": {
        "tags": [
          "TicktickTask"
        ],
        "operationId": "TicktickTask_GetMyTags",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TagDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/GetMyLists": {
      "get": {
        "tags": [
          "TicktickTask"
        ],
        "operationId": "TicktickTask_GetMyLists",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TasklistDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/CreateList": {
      "post": {
        "tags": [
          "TicktickTask"
        ],
        "operationId": "TicktickTask_CreateList",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "dto",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateListRequestDto"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TasklistDto"
                }
              }
            }
          }
        }
      }
    },
    "/CreateTag": {
      "post": {
        "tags": [
          "TicktickTask"
        ],
        "operationId": "TicktickTask_CreateTag",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "dto",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTagRequestDto"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagDto"
                }
              }
            }
          }
        }
      }
    },
    "/UpdateList": {
      "put": {
        "tags": [
          "TicktickTask"
        ],
        "operationId": "TicktickTask_UpdateList",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "dto",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateListRequestDto"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TasklistDto"
                }
              }
            }
          }
        }
      }
    },
    "/UpdateTag": {
      "put": {
        "tags": [
          "TicktickTask"
        ],
        "operationId": "TicktickTask_UpdateTag",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "dto",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTagRequestDto"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagDto"
                }
              }
            }
          }
        }
      }
    },
    "/DeleteListWithTasks": {
      "delete": {
        "tags": [
          "TicktickTask"
        ],
        "operationId": "TicktickTask_DeleteListWithTasks",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "x-position": 1
          },
          {
            "name": "listId",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/DeleteTag": {
      "delete": {
        "tags": [
          "TicktickTask"
        ],
        "operationId": "TicktickTask_DeleteTag",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "x-position": 1
          },
          {
            "name": "tagId",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/AddTaskTag": {
      "put": {
        "tags": [
          "TicktickTask"
        ],
        "operationId": "TicktickTask_AddTaskTag",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "dto",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeTaskTagRequestDto"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskTagDto"
                }
              }
            }
          }
        }
      }
    },
    "/RemoveTaskTag": {
      "put": {
        "tags": [
          "TicktickTask"
        ],
        "operationId": "TicktickTask_RemoveTaskTag",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "dto",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeTaskTagRequestDto"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/TotpRegister": {
      "post": {
        "tags": [
          "Totp"
        ],
        "operationId": "Totp_TotpRegister",
        "requestBody": {
          "x-name": "dto",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TotpRegisterRequestDto"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TotpRegisterResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/TotpLogin": {
      "post": {
        "tags": [
          "Totp"
        ],
        "operationId": "Totp_TotpLogin",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TotpLoginRequestDto"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JwtResponse"
                }
              }
            }
          }
        }
      }
    },
    "/TotpVerify": {
      "post": {
        "tags": [
          "Totp"
        ],
        "operationId": "Totp_TotpVerify",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TotpVerifyRequestDto"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/TotpRotate": {
      "post": {
        "tags": [
          "Totp"
        ],
        "operationId": "Totp_TotpRotate",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TotpRotateRequestDto"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TotpRegisterResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/ToptUnregister": {
      "delete": {
        "tags": [
          "Totp"
        ],
        "operationId": "Totp_ToptUnregister",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TotpUnregisterRequestDto"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "JwtResponse": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "jwt"
        ],
        "properties": {
          "jwt": {
            "type": "string",
            "minLength": 1
          }
        }
      },
      "AuthRequestDto": {
        "type": "object",
        "description": "Used both for sign in and registration. Password repeat verified client side\n            ",
        "additionalProperties": false,
        "required": [
          "email",
          "password"
        ],
        "properties": {
          "email": {
            "type": "string",
            "description": "Just to have any unique identifier for the user when signing in and registering\n            ",
            "minLength": 1
          },
          "password": {
            "type": "string",
            "minLength": 1
          }
        }
      },
      "TickticktaskDto": {
        "type": "object",
        "description": "Data annotations on properties are used for validation in tests\n            ",
        "additionalProperties": false,
        "required": [
          "taskId",
          "listId",
          "title",
          "description",
          "priority",
          "completed",
          "createdAt",
          "taskTags"
        ],
        "properties": {
          "taskId": {
            "type": "string",
            "minLength": 1
          },
          "listId": {
            "type": "string",
            "minLength": 1
          },
          "title": {
            "type": "string",
            "minLength": 1
          },
          "description": {
            "type": "string",
            "minLength": 1
          },
          "dueDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "priority": {
            "type": "integer",
            "format": "int32",
            "maximum": 5.0,
            "minimum": 1.0
          },
          "completed": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "minLength": 1
          },
          "completedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "taskTags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskTagDto"
            }
          }
        }
      },
      "TaskTagDto": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "taskId",
          "tagId",
          "createdAt"
        ],
        "properties": {
          "taskId": {
            "type": "string",
            "minLength": 1
          },
          "tagId": {
            "type": "string",
            "minLength": 1
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "minLength": 1
          }
        }
      },
      "GetTasksFilterAndOrderParameters": {
        "type": "object",
        "description": "If no value is passed to each property it defaults to not filter by the property. No value is required.\nDeliberately using ? C# operator for properties such that if no default values are assigned, service method assigns\nthem manually\nNo constructor due to the above.\n            ",
        "additionalProperties": false,
        "properties": {
          "isCompleted": {
            "type": "boolean",
            "nullable": true
          },
          "earliestDueDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "latestDueDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "minPriority": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "maxPriority": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "searchTerm": {
            "type": "string",
            "nullable": true
          },
          "tagIds": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "listIds": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "orderBy": {
            "type": "string",
            "nullable": true
          },
          "isDescending": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "CreateTaskRequestDto": {
        "type": "object",
        "description": "Task is always created for the user sending the request\n            ",
        "additionalProperties": false,
        "required": [
          "listId",
          "title",
          "description",
          "priority"
        ],
        "properties": {
          "listId": {
            "type": "string",
            "minLength": 1
          },
          "title": {
            "type": "string",
            "minLength": 1
          },
          "description": {
            "type": "string",
            "minLength": 1
          },
          "dueDate": {
            "type": "string",
            "description": "Due date is optional since tasks may have none\n            ",
            "format": "date-time",
            "nullable": true
          },
          "priority": {
            "type": "integer",
            "format": "int32",
            "maximum": 5.0,
            "minimum": 1.0
          },
          "tagsIds": {
            "type": "array",
            "description": "List of tag IDs to add to the task when it is created\n            ",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "UpdateTaskRequestDto": {
        "type": "object",
        "description": "Replaces all of the properties with the values. Nulls are not allowed, since the client app should send the\nexisting object and not just declare certain properties to replace\n            ",
        "additionalProperties": false,
        "required": [
          "id",
          "listId",
          "completed",
          "title",
          "description",
          "priority"
        ],
        "properties": {
          "id": {
            "type": "string",
            "minLength": 1
          },
          "listId": {
            "type": "string",
            "minLength": 1
          },
          "completed": {
            "type": "boolean"
          },
          "title": {
            "type": "string",
            "minLength": 1
          },
          "description": {
            "type": "string",
            "minLength": 1
          },
          "dueDate": {
            "type": "string",
            "description": "Due date can be \"removed\" by assigning it null\n            ",
            "format": "date-time",
            "nullable": true
          },
          "priority": {
            "type": "integer",
            "format": "int32",
            "maximum": 5.0,
            "minimum": 1.0
          }
        }
      },
      "TagDto": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "tagId",
          "name",
          "userId",
          "createdAt"
        ],
        "properties": {
          "tagId": {
            "type": "string",
            "minLength": 1
          },
          "name": {
            "type": "string",
            "minLength": 1
          },
          "userId": {
            "type": "string",
            "minLength": 1
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "minLength": 1
          }
        }
      },
      "TasklistDto": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "listId",
          "userId",
          "name",
          "createdAt"
        ],
        "properties": {
          "listId": {
            "type": "string",
            "minLength": 1
          },
          "userId": {
            "type": "string",
            "minLength": 1
          },
          "name": {
            "type": "string",
            "minLength": 1
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "minLength": 1
          }
        }
      },
      "CreateListRequestDto": {
        "type": "object",
        "description": "List is always created for the user sending the request\n            ",
        "additionalProperties": false,
        "required": [
          "listName"
        ],
        "properties": {
          "listName": {
            "type": "string",
            "minLength": 1
          }
        }
      },
      "CreateTagRequestDto": {
        "type": "object",
        "description": "Tag is always created for the user sending the request\n            ",
        "additionalProperties": false,
        "required": [
          "tagName"
        ],
        "properties": {
          "tagName": {
            "type": "string",
            "minLength": 1
          }
        }
      },
      "UpdateListRequestDto": {
        "type": "object",
        "description": "Basically just a change name of list since there are so few properties to lists\n            ",
        "additionalProperties": false,
        "required": [
          "listId",
          "newName"
        ],
        "properties": {
          "listId": {
            "type": "string",
            "minLength": 1
          },
          "newName": {
            "type": "string",
            "minLength": 1
          }
        }
      },
      "UpdateTagRequestDto": {
        "type": "object",
        "description": "Basically just a change name of tag since there are so few properties to tags\n            ",
        "additionalProperties": false,
        "required": [
          "tagId",
          "newName"
        ],
        "properties": {
          "tagId": {
            "type": "string",
            "minLength": 1
          },
          "newName": {
            "type": "string",
            "minLength": 1
          }
        }
      },
      "ChangeTaskTagRequestDto": {
        "type": "object",
        "description": "Used for assigning and de-assigning tags to tasks. Works as \"toggle\", so if the tag already exists it is removed\nand vice versa.\n            ",
        "additionalProperties": false,
        "required": [
          "tagId",
          "taskId"
        ],
        "properties": {
          "tagId": {
            "type": "string",
            "minLength": 1
          },
          "taskId": {
            "type": "string",
            "minLength": 1
          }
        }
      },
      "TotpRegisterResponseDto": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "message",
          "qrCodeBase64",
          "secretKey",
          "userId"
        ],
        "properties": {
          "message": {
            "type": "string",
            "minLength": 1
          },
          "qrCodeBase64": {
            "type": "string",
            "minLength": 1
          },
          "secretKey": {
            "type": "string",
            "minLength": 1
          },
          "userId": {
            "type": "string",
            "minLength": 1
          }
        }
      },
      "TotpRegisterRequestDto": {
        "type": "object",
        "description": "When register is performed the client app reveals the QR code\n            ",
        "additionalProperties": false,
        "required": [
          "email"
        ],
        "properties": {
          "email": {
            "type": "string",
            "description": "TOTP required unique identifier for lookup: Email can be used for this\n            ",
            "format": "email",
            "minLength": 1
          }
        }
      },
      "TotpLoginRequestDto": {
        "type": "object",
        "description": "Login is when the 6 digit code is sent to the server\n            ",
        "additionalProperties": false,
        "required": [
          "totpCode",
          "email"
        ],
        "properties": {
          "totpCode": {
            "type": "string",
            "description": "This code is found in the authenticator on the device\n            ",
            "maxLength": 6,
            "minLength": 6
          },
          "email": {
            "type": "string",
            "description": "Email is relevant because backend needs a unique identifier to make a lookup\n            ",
            "format": "email",
            "minLength": 1
          }
        }
      },
      "TotpVerifyRequestDto": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "id",
          "totpCode"
        ],
        "properties": {
          "id": {
            "type": "string",
            "minLength": 1
          },
          "totpCode": {
            "type": "string",
            "maxLength": 6,
            "minLength": 6,
            "pattern": "^\\d{6}$"
          }
        }
      },
      "TotpRotateRequestDto": {
        "type": "object",
        "description": "Used to change the persisted secret to a new random one (not supplied by client)\n            ",
        "additionalProperties": false,
        "required": [
          "currentTotpCode"
        ],
        "properties": {
          "currentTotpCode": {
            "type": "string",
            "maxLength": 6,
            "minLength": 6,
            "pattern": "^\\d{6}$"
          }
        }
      },
      "TotpUnregisterRequestDto": {
        "type": "object",
        "description": "Unregister is basically \"delete\"\n            ",
        "additionalProperties": false,
        "required": [
          "totpCode"
        ],
        "properties": {
          "totpCode": {
            "type": "string",
            "maxLength": 6,
            "minLength": 6,
            "pattern": "^\\d{6}$"
          }
        }
      },
      "ProblemDetails": {
        "title": "ProblemDetails",
        "type": "object",
        "additionalProperties": {
          "nullable": true
        },
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        }
      }
    }
  }
}